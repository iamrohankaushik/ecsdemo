version: 0.2
  
phases:
  install:
    runtime-versions:
      docker: 20
  pre_build: 
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      - REPOSITORY_URI=041042815388.dkr.ecr.ap-south-1.amazonaws.com/aws-ecrcli-nginx  #Define ECR repository URI
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $REPOSITORY_URI
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=build-$(echo $CODEBUILD_BUILD_ID | awk -F":" '{print $2}')
  build:
    commands:
      - echo Docker build and tagging started on `date`
      - echo Building the Docker image...
      - docker build -t $REPOSITORY_URI:$IMAGE_TAG .
#       - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
      - echo Docker build and tagging completed on `date`
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images... 
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Update the REPOSITORY_URI:IMAGE_TAG in task definition...
      - echo Writing image definitions file...
      - printf '[{"name":"ecsdemo","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json   # Define "name" : "Container Name"
      - cat imagedefinitions.json
artifacts:
    files:
      - imagedefinitions.json
#       - taskdef.json
#       - appspec.yml
